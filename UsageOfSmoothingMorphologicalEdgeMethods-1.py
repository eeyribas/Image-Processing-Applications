import cv2
import numpy as np

from matplotlib import pyplot as plt

img = cv2.imread('MonaLisa.jpg')
blur = cv2.blur(img,(5,5))
gaussian = cv2.GaussianBlur(img,(5,5),0)
median = cv2.medianBlur(img,5)
bileteral = cv2.bilateralFilter(img,9,75,75)
plt.figure(1)
plt.subplot(5,1,1),plt.imshow(img),plt.title('Original Image')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,2),plt.imshow(blur),plt.title('Blur (Smoothing)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,3),plt.imshow(gaussian),plt.title('Gaussian Blur (Smoothing)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,4),plt.imshow(median),plt.title('Median Blur (Smoothing)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,5),plt.imshow(median),plt.title('Bileteral Filter (Smoothing)')
plt.xticks([]), plt.yticks([])

laplacian = cv2.Laplacian(img,cv2.CV_64F)
sobelX = cv2.Sobel(img,cv2.CV_64F,1,0,ksize=5)
sobelY = cv2.Sobel(img,cv2.CV_64F,0,1,ksize=5)
cannyImg = cv2.Canny(img, 100, 200)
plt.figure(2)
plt.subplot(5,1,1),plt.imshow(img),plt.title('Original Image')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,2),plt.imshow(laplacian),plt.title('Laplace (Edge Detection)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,3),plt.imshow(sobelX),plt.title('Sobel-X (Edge Detection)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,4),plt.imshow(sobelY),plt.title('Sobel-Y (Edge Detection)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,5),plt.imshow(cannyImg),plt.title('Canny (Edge Detection)')
plt.xticks([]), plt.yticks([])

kernel = np.ones((5,5),np.uint8)
erosion = cv2.erode(img,kernel,iterations = 1)
dilation = cv2.dilate(img,kernel,iterations = 1)
opening = cv2.morphologyEx(img, cv2.MORPH_OPEN, kernel)
closing = cv2.morphologyEx(img, cv2.MORPH_CLOSE, kernel)
gradient = cv2.morphologyEx(img, cv2.MORPH_GRADIENT, kernel)
tophat = cv2.morphologyEx(img, cv2.MORPH_TOPHAT, kernel)
blackhat = cv2.morphologyEx(img, cv2.MORPH_BLACKHAT, kernel)
plt.figure(3)
plt.subplot(5,1,1),plt.imshow(img),plt.title('Original Image')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,2),plt.imshow(erosion),plt.title('Erosion (Morphological F.)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,3),plt.imshow(dilation),plt.title('Dilation (Morphological F.)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,4),plt.imshow(opening),plt.title('Opening (Morphological F.)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,5),plt.imshow(closing),plt.title('Closing (Morphological F.)')
plt.xticks([]), plt.yticks([])

plt.figure(4)
plt.subplot(5,1,1),plt.imshow(img),plt.title('Original Image')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,2),plt.imshow(gradient),plt.title('Gradient (Morphological F.)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,3),plt.imshow(tophat),plt.title('Top Hat (Morphological F.)')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,4),plt.imshow(blackhat),plt.title('Black Hat (Morphological F.)')
plt.xticks([]), plt.yticks([])

kernel = np.ones((5,5),np.float32)/25
dst = cv2.filter2D(img,-1,kernel)

plt.figure(5)
plt.subplot(5,1,1),plt.imshow(img),plt.title('Original Image')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,2),plt.imshow(dst),plt.title('Kernel 2D')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,3),plt.imshow(blur),plt.title('Blur (Smoothing)')
plt.xticks([]), plt.yticks([])

blur2 = cv2.blur(blur,(5,5))
blur3 = cv2.blur(blur2,(5,5))
plt.figure(6)
plt.subplot(5,1,1),plt.imshow(blur),plt.title('Blur (Smoothing) 1. Filter')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,2),plt.imshow(blur2),plt.title('Blur (Smoothing) 2. Filter')
plt.xticks([]), plt.yticks([])
plt.subplot(5,1,3),plt.imshow(blur3),plt.title('Blur (Smoothing) 3. Filter')
plt.xticks([]), plt.yticks([])

plt.show()